<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vector Database on Akshat Gupta</title>
    <link>https://akshat4112.github.io/tags/vector-database/</link>
    <description>Recent content in Vector Database on Akshat Gupta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Dec 2023 09:00:00 +0100</lastBuildDate>
    <atom:link href="https://akshat4112.github.io/tags/vector-database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is a Vector Database?</title>
      <link>https://akshat4112.github.io/posts/vector-databases/</link>
      <pubDate>Fri, 15 Dec 2023 09:00:00 +0100</pubDate>
      <guid>https://akshat4112.github.io/posts/vector-databases/</guid>
      <description>If you&amp;rsquo;ve been working with modern AI systems ‚Äî particularly in the realm of Large Language Models (LLMs), image embeddings, or recommendation engines ‚Äî you&amp;rsquo;ve probably heard of vector databases. But what are they really? And why is everyone in the ML community suddenly so excited about them?
Let me break it down in simple terms, along with how I&amp;rsquo;ve been exploring them in my own projects.
üîç The Problem: Why Traditional Databases Fall Short Traditional databases (like PostgreSQL or MongoDB) are great when you&amp;rsquo;re dealing with exact matches or relational queries:</description>
    </item>
  </channel>
</rss>
