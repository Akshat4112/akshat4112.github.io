<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on Akshat Gupta</title>
    <link>https://akshat4112.github.io/tags/ai/</link>
    <description>Recent content in AI on Akshat Gupta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 15 Apr 2024 09:00:00 +0100</lastBuildDate>
    <atom:link href="https://akshat4112.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fairness in Machine Learning</title>
      <link>https://akshat4112.github.io/posts/fairness_in_machine_learning_/</link>
      <pubDate>Sun, 15 Oct 2023 09:00:00 +0100</pubDate>
      <guid>https://akshat4112.github.io/posts/fairness_in_machine_learning_/</guid>
      <description>As machine learning systems are increasingly used in critical areas like finance, employment, and criminal justice, it&amp;rsquo;s essential to ensure these models are fair and do not discriminate against certain groups. In this post, I will explore the concept of fairness in machine learning.
Defining Fairness Fairness in machine learning can be understood in several ways:
Group Fairness: This implies equal treatment or outcomes for different groups categorized by sensitive attributes like race or gender.</description>
    </item>
    <item>
      <title>What is an Ontology in a Knowledge Graph?</title>
      <link>https://akshat4112.github.io/posts/ontology-in-knowledge-graphs/</link>
      <pubDate>Mon, 15 Jan 2024 09:00:00 +0100</pubDate>
      <guid>https://akshat4112.github.io/posts/ontology-in-knowledge-graphs/</guid>
      <description>If you&amp;rsquo;re working with knowledge graphs, one term that keeps popping up is ontology. Sounds academic, right? Like something you&amp;rsquo;d find buried in a philosophy textbook.
But in the world of AI, data science, and search engines, an ontology is far from abstract â€” it&amp;rsquo;s the blueprint that gives your knowledge graph meaning. Let&amp;rsquo;s break it down and explore how it all fits together.
ðŸ§  What Is an Ontology (in AI)?</description>
    </item>
    <item>
      <title>What Are Knowledge Graphs?</title>
      <link>https://akshat4112.github.io/posts/what-are-knowledge-graphs/</link>
      <pubDate>Fri, 15 Mar 2024 09:00:00 +0100</pubDate>
      <guid>https://akshat4112.github.io/posts/what-are-knowledge-graphs/</guid>
      <description>We hear the term knowledge graph everywhere now â€” from Google Search to enterprise AI to GenAI apps. But what exactly is a knowledge graph, and why is everyone suddenly obsessed with it?
In this post, I&amp;rsquo;ll break down knowledge graphs in plain language: what they are, how they work, and how I use them in my own projects.
ðŸ§± The Basics: What Is a Knowledge Graph? At its core, a knowledge graph is a network of real-world entities (people, places, things) and the relationships between them.</description>
    </item>
    <item>
      <title>Prompt Engineering: The Art of Talking to AI</title>
      <link>https://akshat4112.github.io/posts/prompt-engineering/</link>
      <pubDate>Mon, 15 Apr 2024 09:00:00 +0100</pubDate>
      <guid>https://akshat4112.github.io/posts/prompt-engineering/</guid>
      <description>We&amp;rsquo;ve all played with ChatGPT, Copilot, or Claude â€” typing in questions and marveling at their responses. But behind the scenes, there&amp;rsquo;s a powerful craft at play: prompt engineering.
It&amp;rsquo;s not just about &amp;ldquo;asking a question.&amp;rdquo; It&amp;rsquo;s about how you phrase it, structure it, and guide the model. Prompt engineering is the new programming skill â€” and it&amp;rsquo;s transforming how we interact with AI.
ðŸ§  What Is Prompt Engineering? Prompt engineering is the process of designing effective input prompts that guide large language models (LLMs) like GPT-4 to produce accurate, helpful, or creative outputs.</description>
    </item>
  </channel>
</rss>
